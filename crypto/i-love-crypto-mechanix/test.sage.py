

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_45714565771547930229226359824324184612765804704488147361405122171431410830457625531894507696079301820876695796609440647494597444433096375990065249515774077523541239928616914554861842429334485025363517166565849602924745902936379628721161367954518076487229592008473203339185677650566708246361459229275716576568 = Integer(45714565771547930229226359824324184612765804704488147361405122171431410830457625531894507696079301820876695796609440647494597444433096375990065249515774077523541239928616914554861842429334485025363517166565849602924745902936379628721161367954518076487229592008473203339185677650566708246361459229275716576568); _sage_const_2938205115049708668056485138176403871361086853648934101627506232566239668541574581519458081557120773367632388591435452676969637296270182244964860487777690358171660162952614090569560548502878423451486434716376263912348986733178496729565668523867452903707337375044080831942666690338685816022188990893636320298 = Integer(2938205115049708668056485138176403871361086853648934101627506232566239668541574581519458081557120773367632388591435452676969637296270182244964860487777690358171660162952614090569560548502878423451486434716376263912348986733178496729565668523867452903707337375044080831942666690338685816022188990893636320298); _sage_const_34981007099734837238533299758138649644651788051104771864691106724937500933145648874428721015045379341994110064523365875150245487954955323710192812559532234986873511482994229494347841043885794519388227924113364604772627940274894512640323396807771050836451224652645782605991571363112070128949113272566961274576 = Integer(34981007099734837238533299758138649644651788051104771864691106724937500933145648874428721015045379341994110064523365875150245487954955323710192812559532234986873511482994229494347841043885794519388227924113364604772627940274894512640323396807771050836451224652645782605991571363112070128949113272566961274576); _sage_const_58875529304338905505953736667221291201023306734480969247806744848754691476474059614663016432386992446676367074190570583945448346734199513681690392081616727023248926447123883344310985916849639888321099825559426707949564522612871413289064362345332045923908212157578793253630638285901734823301475623394385357159 = Integer(58875529304338905505953736667221291201023306734480969247806744848754691476474059614663016432386992446676367074190570583945448346734199513681690392081616727023248926447123883344310985916849639888321099825559426707949564522612871413289064362345332045923908212157578793253630638285901734823301475623394385357159); _sage_const_3 = Integer(3); _sage_const_7181440813425333706869174610678052506 = Integer(7181440813425333706869174610678052506); _sage_const_71055505674727459802208513173474964857 = Integer(71055505674727459802208513173474964857); _sage_const_111820717202976493862690612149607975104 = Integer(111820717202976493862690612149607975104); _sage_const_165133443861765297927799892635709230456 = Integer(165133443861765297927799892635709230456); _sage_const_72432382236220395199525441338281930328 = Integer(72432382236220395199525441338281930328); _sage_const_57478891897114368065422549586619540493 = Integer(57478891897114368065422549586619540493); _sage_const_0 = Integer(0)
from Crypto.Util.number import *


def modinv(x,p):
    return pow(x, -_sage_const_1  ,p)


c1 = _sage_const_45714565771547930229226359824324184612765804704488147361405122171431410830457625531894507696079301820876695796609440647494597444433096375990065249515774077523541239928616914554861842429334485025363517166565849602924745902936379628721161367954518076487229592008473203339185677650566708246361459229275716576568 
c2 = _sage_const_2938205115049708668056485138176403871361086853648934101627506232566239668541574581519458081557120773367632388591435452676969637296270182244964860487777690358171660162952614090569560548502878423451486434716376263912348986733178496729565668523867452903707337375044080831942666690338685816022188990893636320298 
c3 = _sage_const_34981007099734837238533299758138649644651788051104771864691106724937500933145648874428721015045379341994110064523365875150245487954955323710192812559532234986873511482994229494347841043885794519388227924113364604772627940274894512640323396807771050836451224652645782605991571363112070128949113272566961274576 
N = _sage_const_58875529304338905505953736667221291201023306734480969247806744848754691476474059614663016432386992446676367074190570583945448346734199513681690392081616727023248926447123883344310985916849639888321099825559426707949564522612871413289064362345332045923908212157578793253630638285901734823301475623394385357159 
e=_sage_const_3 

a = [_sage_const_7181440813425333706869174610678052506 , _sage_const_71055505674727459802208513173474964857 , _sage_const_111820717202976493862690612149607975104 ]
b = [_sage_const_165133443861765297927799892635709230456 , _sage_const_72432382236220395199525441338281930328 , _sage_const_57478891897114368065422549586619540493 ]




def gcd(a, b):
    while b:
        a, b = b, a % b
    return a.monic()

def FranklinReiter(f1, f2):
    return int(-gcd(f1, f2).coefficients()[_sage_const_0 ])

P = PolynomialRing(Zmod(N), names=('X',)); (X,) = P._first_ngens(1)
f1 = (a[_sage_const_0 ]*X + b[_sage_const_0 ])**e - c1
f2 = (a[_sage_const_1 ]*X + b[_sage_const_1 ])**e - c2
m = FranklinReiter(f1, f2)
print(long_to_bytes(m))

#plaintext_message = solution[m]
#print(f"The decrypted message is: {plaintext_message}")


